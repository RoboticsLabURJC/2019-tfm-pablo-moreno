<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-02-13T12:33:25+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Robotics Lab URJC</title><subtitle>Programming Robot Intelligence</subtitle><author><name>Pablo Moreno</name></author><entry><title type="html">Week 6. Synchronous exercises V1</title><link href="http://localhost:4000/previous%20work/week-6/" rel="alternate" type="text/html" title="Week 6. Synchronous exercises V1" /><published>2020-02-13T00:00:00+01:00</published><updated>2020-02-13T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-6</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-6/">&lt;p&gt;Hi again!&lt;/p&gt;

&lt;p&gt;On this week, I’ve been still working on Kibotics-Server. I’ve done a very first version of synchronous exercises and I’ve updated
the Scratch templates to work with both synchronous and asynchronous exercises.&lt;/p&gt;

&lt;p&gt;The HTML-Django templates It’s been a tough work but, at the end, I did it. Now there are two different scratch templates
for the three differents scratch exercises (individual, asynchronous and synchronous).&lt;/p&gt;

&lt;p&gt;On the other side, I’ve been developing a “Share Code” option and run it on the other browser. I’ve finally done it, although
It needs a testing and fixing several features. You can chat with other user, stream the simulator, and send your code to run it 
on the other browser and sees it via streaming. You can watch an example &lt;a href=&quot;https://youtu.be/viNRkbHUdDQ&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;figure class=&quot; &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/kibotics.png&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/kibotics.png&quot; alt=&quot;Kibotics&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Kibotics logo
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 6" /><category term="WebRTC" /><category term="WebSocket" /><category term="JavaScript" /><category term="Python" /><category term="HTML" /><category term="CSS" /><category term="RTCPeerConnections" /><category term="DataChannels" /><category term="Django" /><category term="Django-Channels" /><category term="Kibotics-Server" /><category term="Canvas streaming" /><category term="Django Templates" /><summary type="html">Django tecnologies</summary></entry><entry><title type="html">Week 5. Video-Chat in Kibotics-WebServer</title><link href="http://localhost:4000/previous%20work/week-5/" rel="alternate" type="text/html" title="Week 5. Video-Chat in Kibotics-WebServer" /><published>2020-02-06T00:00:00+01:00</published><updated>2020-02-06T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-5</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-5/">&lt;p&gt;Hi again!&lt;/p&gt;

&lt;p&gt;On this week, I’ve been still working on Kibotics-Server. I’ve finished develop the chat and I’ve developed the
video streaming. In addition, I’ve add a feature with which  only the WebSim simulator is transmitted, so It’s perfect!.&lt;/p&gt;

&lt;p&gt;In the chat code, I’ve added a palette color button so, depending on the state of the connection, the button color changes.
I’ve also created a user checker algorithm so only two users can be in the same chat at the same time.&lt;/p&gt;

&lt;p&gt;In the stream code, I’ve finally achieved the video transmission via canvas. That’s because the html WebSim element is a canvas
element. In that way, I could sed the streaming with no problems. I’ve also implement a disconnection code with perfects results.
You can see the progress &lt;a href=&quot;https://www.youtube.com/watch?v=5AFm1MT47_s&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve also created a new exercise to implement this media options and I had to create a new user to test this performance.&lt;/p&gt;

&lt;figure class=&quot; &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/kibotics.png&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/kibotics.png&quot; alt=&quot;Kibotics&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Kibotics logo
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 5" /><category term="WebRTC" /><category term="WebSocket" /><category term="JavaScript" /><category term="Python" /><category term="HTML" /><category term="CSS" /><category term="RTCPeerConnections" /><category term="DataChannels" /><category term="Django" /><category term="Django-Channels" /><category term="Kibotics-Server" /><category term="Canvas streaming" /><summary type="html">Django tecnologies</summary></entry><entry><title type="html">Week 4. Working on Kibotics-Server</title><link href="http://localhost:4000/previous%20work/week-4/" rel="alternate" type="text/html" title="Week 4. Working on Kibotics-Server" /><published>2020-01-30T00:00:00+01:00</published><updated>2020-01-30T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-4</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-4/">&lt;p&gt;Hi again!&lt;/p&gt;

&lt;p&gt;On this week, I’ve been working on Kibotics-Server. It’s a Django based server, so my previous work
has been too useful. The difference is that the previous Django examples where tiny comparing with this one.&lt;/p&gt;

&lt;p&gt;On the first days I’ve finished developing the Video-Chat Django example. You can see the video 
&lt;a href=&quot;https://www.youtube.com/watch?v=mqlMRcmAtHE&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;On this last days I’ve been studying the code and I’ve been working on the chat. It’s almost done but
I need a way to connect different users. The last, and best, option is using a token for each
chat room. This way It’s better than using the simulation-id. Tha final step is adding different user with the same token
because the signaling server works fine and the channel are set.&lt;/p&gt;

&lt;figure class=&quot; &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/KServer-Chat1.png&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/KServer-Chat1.png&quot; alt=&quot;KServer-Chat1&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Kibotics WebServer chat first view
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 4" /><category term="WebRTC" /><category term="WebSocket" /><category term="JavaScript" /><category term="Python" /><category term="HTML" /><category term="CSS" /><category term="RTCPeerConnections" /><category term="DataChannels" /><category term="Django" /><category term="Django-Channels" /><category term="Kibotics-Server" /><summary type="html">Django tecnologies</summary></entry><entry><title type="html">Week 3. Learning Django-Channels</title><link href="http://localhost:4000/previous%20work/week-3/" rel="alternate" type="text/html" title="Week 3. Learning Django-Channels" /><published>2020-01-23T00:00:00+01:00</published><updated>2020-01-23T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-3</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-3/">&lt;p&gt;Hi again!&lt;/p&gt;

&lt;p&gt;On my third week I’ve been working on two main projects. I’ve been continue learning about WebRTC, specially about RTCPeerConnections,
WebSockets and RTCPeerConnections and I’ve also learned about Django and Django-Channels.&lt;/p&gt;

&lt;p&gt;On my WebRTC work I’ve finished a &lt;strong&gt;Chat &amp;amp; Screen-sharing server&lt;/strong&gt;. You can check the progress on
my &lt;a href=&quot;https://youtu.be/G1qPhagzY6w&quot;&gt;youtube&lt;/a&gt; channel.
It has been a very hard work but It’s almost finish. My last task is develop an option for media html div sharing.&lt;/p&gt;

&lt;p&gt;On my Django work I’ve developed a &lt;strong&gt;Chat server&lt;/strong&gt; using Django-Channels. It has been a bit more complicated
than develop the WebRTC chat but I got it with a minor aesthetic changes. The result can be seen in my &lt;a href=&quot;https://youtu.be/_QMhxT_xjw8&quot;&gt;youtube&lt;/a&gt; channel. The next task is implement a RTCPeerConnection with Django-Channels.
I must study the if media stream it’s possible using Django-Channels and if It is, implement it on my server. The immediate problem
is that I’m using 1.11 Django version and the 1.1.5 Django-Channels version and the current Django
version is 3.0.2 and 2.4 for Django-Channels so I really don’t know if this older Django-Channel version supports it.&lt;/p&gt;

&lt;figure class=&quot;half &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/webrtc-logo.png&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/webrtc-logo.png&quot; alt=&quot;WebRTC&quot; /&gt;
      &lt;/a&gt;
    
  
    
      &lt;a href=&quot;/assets/images/posts/django-channels-logo.webp&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/django-channels-logo.webp&quot; alt=&quot;WebRTC&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;WebRTC &amp;amp; Django-Channels logos
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 3" /><category term="WebRTC" /><category term="WebSocket" /><category term="JavaScript" /><category term="Python" /><category term="HTML" /><category term="CSS" /><category term="RTCPeerConnections" /><category term="DataChannels" /><category term="Django" /><category term="Django-Channels" /><summary type="html">Django tecnologies</summary></entry><entry><title type="html">Week 2. Learning WebRTC</title><link href="http://localhost:4000/previous%20work/week-2/" rel="alternate" type="text/html" title="Week 2. Learning WebRTC" /><published>2020-01-16T00:00:00+01:00</published><updated>2020-01-16T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-2</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-2/">&lt;p&gt;Hi again!&lt;/p&gt;

&lt;p&gt;On my second week I’ve been working on WebRTC tecnologies like WebSockets, RTCPeerConnection and DataChannels.
The main objective is develop a code to share a video element (in this case is the Kibotics websim) with othe user using WebRTC.&lt;/p&gt;

&lt;p&gt;I’ve been studying differents examples from internet, mainly in the &lt;a href=&quot;https://webrtc.github.io/samples/&quot;&gt;WebRTC tutorials page&lt;/a&gt;.
Following these tutorials I’ve develop the following examples:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;stream_camera example. This example record the laptop camera and play it on an html video.&lt;/li&gt;
  &lt;li&gt;element_share. This example play a html embed video clicking in the “Start” button and play it on a second html video.&lt;/li&gt;
  &lt;li&gt;peerconnection_stream. This example it’s a bit more complicated and record a html embed video and stream it via RTCPeerConnection
to a second html video. The example works perfect streaming the camera video but using the html embed video, the stream it’s played in black.&lt;/li&gt;
  &lt;li&gt;RTCPeedConnectionServer. In this example I’ve developped a signalig WebRTC server to connect different user by pairs
with a unique token secuence.&lt;/li&gt;
  &lt;li&gt;chat_server. This last developped example uses the 4) example to implement a chat with DataChannels. It’s a work in progress
and I hope to finish it tomorrow.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 2" /><category term="WebRTC" /><category term="WebSocket" /><category term="JavaScript" /><category term="HTML" /><category term="CSS" /><category term="RTCPeerConnections" /><category term="DataChannels" /><summary type="html">WebRTC tecnologies</summary></entry><entry><title type="html">Week 1. Screen-sharing</title><link href="http://localhost:4000/previous%20work/week-1/" rel="alternate" type="text/html" title="Week 1. Screen-sharing" /><published>2020-01-09T00:00:00+01:00</published><updated>2020-01-09T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-1</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-1/">&lt;p&gt;Hi again!
On my first week doing different stuff I had to read a TFG of one of my partners named Rubén Álvarez. He made an amazing job and explained so much interesting things about kibotics organization, wich is where I belong.&lt;/p&gt;

&lt;p&gt;Also, I had to test some code about screen sharing to develop on kibotics practices. I had tested some codes but they weren’t useful so I finally found an insteresting code from &lt;a href=&quot;https://github.com/muaz-khan/&quot;&gt;Muaz Khan&lt;/a&gt; who uses &lt;strong&gt;WebRTC&lt;/strong&gt; and It doesn’t need any extrension or plugin at the browser. I’ve modifed the code to add JdeRobot information instead of him. You can watch the video &lt;a href=&quot;https://www.youtube.com/watch?v=GloVpVrjjOk&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’ve been learning about &lt;strong&gt;WebSocket&lt;/strong&gt; and I’ve made a simple Server and Client communication:&lt;/p&gt;

&lt;figure class=&quot; &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/websocket_test.png&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/websocket_test.png&quot; alt=&quot;Image websocket_test&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Testing websockets.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;And that’s all about this week!&lt;/p&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 1" /><category term="WebRTC" /><category term="websocket" /><category term="JavaScript" /><summary type="html">Introduce to myself</summary></entry><entry><title type="html">Week 0. Let’s start</title><link href="http://localhost:4000/previous%20work/week-0/" rel="alternate" type="text/html" title="Week 0. Let's start" /><published>2019-12-23T00:00:00+01:00</published><updated>2019-12-23T00:00:00+01:00</updated><id>http://localhost:4000/previous%20work/week-0</id><content type="html" xml:base="http://localhost:4000/previous%20work/week-0/">&lt;p&gt;Hi everybody!&lt;/p&gt;

&lt;p&gt;I’m Pablo Moreno Vera, student of the master in &lt;a href=&quot;https://www.urjc.es/estudios/master/872-ingenieria-de-telecomunicacion&quot;&gt;Telecommunication Engineering at
Rey Juan Carlos University&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I’m starting at blogging with this first post. I didn’t try it before and I hope post every week.
My Post-Degree Project is about &lt;a href=&quot;https://kibotics.org/&quot;&gt;Klibotics&lt;/a&gt; and &lt;a href=&quot;https://unibotics.org/&quot;&gt;Unibotics&lt;/a&gt; platforms.&lt;/p&gt;

&lt;p&gt;On my first week I must study about blogs with Jekyll.&lt;/p&gt;

&lt;p&gt;I installed Ruby and Jekyll: I followed the &lt;a href=&quot;https://github.com/RoboticsLabURJC/2019-tfm-ignacio-arranz/tree/master/docs_template&quot;&gt;installations&lt;/a&gt; steps. But It’s
so hard to everything works on the first try so I had some troubles. After I installed both softwares, I tried to launch the repository I cloned from &lt;a href=&quot;https://github.com/RoboticsLabURJC/2019-tfm-ignacio-arranz/tree/master/docs_template&quot;&gt;here&lt;/a&gt;
and copy into mine but I got this error: &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/lib/site_ruby/2.5.0/rubygems.rb:289:infind_spec_for_exe’: can’t find gem bundler (&amp;gt;= 0.a) with executable bundle (Gem::GemNotFoundException)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To fix that problem I followed these steps:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;I made a cat of the “Gemfile.lock” to guess the bundle version used. The version was “bundle 2.0.2”&lt;/li&gt;
  &lt;li&gt;I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;gem bundler -v 2.0.2&lt;/code&gt; to select the bundle version.&lt;/li&gt;
  &lt;li&gt;I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle update listen&lt;/code&gt; to update the dependencies for that version.&lt;/li&gt;
  &lt;li&gt;I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle i&lt;/code&gt; to activate that version.&lt;/li&gt;
  &lt;li&gt;Once I had the version updated and activated, I ran the &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt; command to start my blog and ¡BINGO! it worked.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot; &quot;&gt;
  
    
      &lt;a href=&quot;/assets/images/posts/start-the-adventure.jpeg&quot;&gt;
        &lt;img src=&quot;/assets/images/posts/start-the-adventure.jpeg&quot; alt=&quot;Let's Start&quot; /&gt;
      &lt;/a&gt;
    
  
  
    &lt;figcaption&gt;Let’s start.
&lt;/figcaption&gt;
  
&lt;/figure&gt;

&lt;p&gt;Pablo.&lt;/p&gt;</content><author><name>pmvera</name></author><category term="logbook" /><category term="first steps" /><category term="week 0" /><category term="setting environment" /><summary type="html">Introduce to myself</summary></entry><entry><title type="html">My first post</title><link href="http://localhost:4000/your%20category/previous-work/" rel="alternate" type="text/html" title="My first post" /><published>2019-09-05T00:00:00+02:00</published><updated>2019-09-05T00:00:00+02:00</updated><id>http://localhost:4000/your%20category/previous-work</id><content type="html" xml:base="http://localhost:4000/your%20category/previous-work/">&lt;p&gt;Simple text to see the appearance and result of the documentation in a post.&lt;/p&gt;

&lt;h2 id=&quot;title-1&quot;&gt;Title 1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://getlorem.com/es/&quot;&gt;Lorem ipsum&lt;/a&gt; dolor sit amet consectetur adipiscing elit odio, ullamcorper orci torquent tristique habitasse interdum integer ridiculus, lectus pellentesque mus donec morbi sapien molestie. Libero platea vivamus tortor fringilla vel penatibus ut egestas, etiam aptent himenaeos magnis facilisi iaculis placerat. Congue fusce nisl torquent ridiculus eleifend diam vehicula egestas iaculis, erat purus eget facilisis metus neque ante suscipit scelerisque vel, commodo potenti lacinia etiam lectus nam facilisi ac.&lt;/p&gt;

&lt;h2 id=&quot;title-2&quot;&gt;Title 2&lt;/h2&gt;

&lt;p&gt;Tempor montes aenean dis fusce viverra, parturient eros per torquent tristique pharetra, magnis enim vivamus inceptos. Aliquam malesuada fames parturient mauris congue cubilia fringilla dui, venenatis varius cursus class vitae magna sollicitudin, nulla euismod pretium feugiat nunc aliquet eleifend. Sollicitudin enim mus feugiat sociosqu lobortis ridiculus magnis tempus varius, habitasse cursus neque pulvinar iaculis molestie quam dis rutrum, tortor vel proin vehicula montes id leo turpis.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Lorem ipsum dolor sit amet consectetur adipiscing elit odio, ullamcorper orci torquent tristique habitasse interdum integer ridiculus, lectus pellentesque mus donec morbi sapien molestie.&lt;/li&gt;
  &lt;li&gt;Libero platea vivamus tortor fringilla vel penatibus ut egestas, etiam aptent himenaeos magnis facilisi iaculis placerat.&lt;/li&gt;
  &lt;li&gt;Congue fusce nisl torquent ridiculus eleifend diam vehicula egestas iaculis, erat purus eget facilisis metus neque ante suscipit scelerisque vel, commodo potenti lacinia etiam lectus nam facilisi ac.&lt;/li&gt;
  &lt;li&gt;Tempor montes aenean dis fusce viverra, parturient eros per torquent tristique pharetra, magnis enim vivamus inceptos.&lt;/li&gt;
  &lt;li&gt;Aliquam malesuada fames parturient mauris congue cubilia fringilla dui, venenatis varius cursus class vitae magna sollicitudin, nulla euismod pretium feugiat nunc aliquet eleifend. Sollicitudin enim mus feugiat sociosqu lobortis ridiculus magnis tempus varius, habitasse cursus neque pulvinar iaculis molestie quam dis rutrum, tortor vel proin vehicula montes id leo turpis.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Tony Stark</name></author><category term="tag 1" /><category term="tag 2" /><category term="tag 3" /><category term="tag 4" /><summary type="html">This is an example of my first post</summary></entry><entry><title type="html">Ecuations</title><link href="http://localhost:4000/your%20category/ecuations/" rel="alternate" type="text/html" title="Ecuations" /><published>2019-09-03T00:00:00+02:00</published><updated>2019-09-03T00:00:00+02:00</updated><id>http://localhost:4000/your%20category/ecuations</id><content type="html" xml:base="http://localhost:4000/your%20category/ecuations/">&lt;h2 id=&quot;how-do-you-use-them&quot;&gt;How do you use them?&lt;/h2&gt;

&lt;p&gt;The equations admitted are those usually used in Latex and Markdown. Thanks to the mathjax library they are rendered.&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\frac{-b\pm\sqrt{b^2-4ac}}{2a}&lt;/script&gt;

&lt;p&gt;Thanks to this library and the integration with Minimal Mistakes, the result of your documentation will look spectacular.&lt;/p&gt;</content><author><name>Tony Stark</name></author><category term="tag 1" /><category term="tag 2" /><category term="tag 3" /><category term="tag 4" /><summary type="html">The template has been set up to administer equations</summary></entry></feed>